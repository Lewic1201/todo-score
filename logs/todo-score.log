2020-02-18 16:15:42.403 [restartedMain] INFO  c.l.todoscore.TodoScoreApplication - Starting TodoScoreApplication on DESKTOP-OV0MBIP with PID 8480 (E:\lewic\code\git\todo-score\target\classes started by lewic in E:\lewic\code\git\todo-score)
2020-02-18 16:15:42.459 [restartedMain] DEBUG c.l.todoscore.TodoScoreApplication - Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-18 16:15:42.460 [restartedMain] INFO  c.l.todoscore.TodoScoreApplication - The following profiles are active: dev
2020-02-18 16:15:42.608 [restartedMain] INFO  o.s.b.d.restart.ChangeableUrls - The Class-Path manifest attribute in C:\Users\lewic\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/C:/Users/lewic/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-18 16:15:42.609 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-18 16:15:42.609 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-18 16:15:44.769 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-18 16:15:44.901 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 114ms. Found 4 JPA repository interfaces.
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'cycleTypeDao' and 'com.lewic.todoscore.dao.jpa.primary.CycleTypeDao' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'taskDao' and 'com.lewic.todoscore.dao.jpa.primary.TaskDao' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'taskRecordDao' and 'com.lewic.todoscore.dao.jpa.primary.TaskRecordDao' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'workdayDao' and 'com.lewic.todoscore.dao.jpa.primary.WorkdayDao' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'taskRecordMapper' and 'com.lewic.todoscore.dao.mybatis.master.TaskRecordMapper' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.493 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'userMapper' and 'com.lewic.todoscore.dao.mybatis.master.UserMapper' mapperInterface. Bean already defined with the same name!
2020-02-18 16:15:45.494 [restartedMain] WARN  o.m.s.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[com.lewic.todoscore.dao]' package. Please check your configuration.
2020-02-18 16:15:46.101 [restartedMain] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-18 16:15:46.814 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8989 (http)
2020-02-18 16:15:46.829 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8989"]
2020-02-18 16:15:46.830 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2020-02-18 16:15:46.830 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-18 16:15:47.195 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2020-02-18 16:15:47.195 [restartedMain] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4585 ms
2020-02-18 16:15:47.504 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: primaryPersistenceUnit]
2020-02-18 16:15:47.641 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate Core {5.4.9.Final}
2020-02-18 16:15:47.982 [restartedMain] INFO  o.h.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-18 16:15:48.240 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2020-02-18 16:15:48.913 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2020-02-18 16:15:48.958 [restartedMain] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2020-02-18 16:15:50.832 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-18 16:15:50.858 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'primaryPersistenceUnit'
2020-02-18 16:15:50.892 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2020-02-18 16:15:52.524 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-18 16:15:52.978 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2020-02-18 16:15:53.065 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2020-02-18 16:15:53.171 [restartedMain] INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService 'taskScheduler'
2020-02-18 16:15:53.728 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
2020-02-18 16:15:53.756 [restartedMain] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
2020-02-18 16:15:53.771 [restartedMain] INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
2020-02-18 16:15:54.137 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8989"]
2020-02-18 16:15:54.230 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8989 (http) with context path ''
2020-02-18 16:15:54.243 [restartedMain] INFO  c.l.todoscore.TodoScoreApplication - Started TodoScoreApplication in 12.75 seconds (JVM running for 18.641)
2020-02-18 16:17:34.137 [scheduling-1] INFO  c.l.t.s.ImportRecordScheduler - exec test1=====>>>>>
2020-02-18 16:17:41.027 [http-nio-8989-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-18 16:17:41.027 [http-nio-8989-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2020-02-18 16:17:41.056 [http-nio-8989-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 29 ms
2020-02-18 16:17:44.313 [http-nio-8989-exec-10] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2020-02-18 16:17:44.742 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:17:44.785 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:17:44.856 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:17:44.892 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:17:44.893 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:17:44.975 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:07.044 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48s24ms282Âµs872ns).
2020-02-18 16:18:10.972 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:10.974 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:11.007 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:11.008 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:11.009 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:11.063 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:13.656 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:13.657 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:13.698 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:13.700 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:13.700 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:13.743 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:15.194 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:15.194 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:15.231 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:15.234 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:15.235 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:15.280 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:16.117 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:16.117 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:16.153 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:16.153 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:16.154 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:16.194 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:17.031 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:17.032 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:17.068 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:17.069 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:17.069 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:17.124 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:17.773 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:17.773 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:17.809 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:17.809 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:17.834 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:17.875 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:20.174 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:20.174 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:20.210 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:20.211 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:20.212 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:20.257 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:21.107 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:21.108 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:21.141 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:21.142 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:21.143 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:21.187 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:25.307 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:25.307 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:25.366 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:25.368 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:25.369 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:25.468 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:26.155 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:26.156 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:26.189 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:26.190 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:26.190 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:26.259 [http-nio-8989-exec-5] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:28.070 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:28.070 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:28.106 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:28.107 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:28.108 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:28.148 [http-nio-8989-exec-7] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:28.857 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:28.858 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:28.967 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:28.968 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:28.969 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:29.050 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:29.491 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:29.492 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:29.544 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:29.544 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:29.545 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:29.626 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:30.420 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:30.421 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:30.718 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:30.720 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:30.739 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:30.820 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:31.337 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:31.338 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:31.427 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:31.428 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:31.429 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:31.520 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:18:32.230 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:32.230 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:32.287 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:32.288 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:32.289 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:18:32.336 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:18:44.416 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:18:44.417 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:18:44.451 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:18:44.452 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:18:44.452 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:18:44.495 [http-nio-8989-exec-3] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:19:05.909 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:05.910 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:05.944 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:20.174 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:20.175 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:19:20.174 [scheduling-1] INFO  c.l.t.s.ImportRecordScheduler - exec test1=====>>>>>
2020-02-18 16:19:20.213 [http-nio-8989-exec-4] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:19:25.340 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:25.341 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:25.378 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:33.428 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:33.429 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:19:33.472 [http-nio-8989-exec-6] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:19:33.473 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:33.473 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:33.509 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:33.510 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:33.510 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:19:33.554 [http-nio-8989-exec-8] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:19:36.118 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:36.119 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:36.153 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:36.154 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:36.155 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:19:36.191 [http-nio-8989-exec-10] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:19:38.770 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:38.770 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:38.804 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:38.804 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:38.805 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:19:38.845 [http-nio-8989-exec-1] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:19:39.851 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:39.851 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:39.886 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:39.887 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:39.888 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 0(Integer), 10(Integer)
2020-02-18 16:19:39.928 [http-nio-8989-exec-9] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 10
2020-02-18 16:19:40.625 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==>  Preparing: SELECT count(id) FROM task_record where `finish` is not null 
2020-02-18 16:19:40.625 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - ==> Parameters: 
2020-02-18 16:19:40.658 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.getCountByFinishNotNull - <==      Total: 1
2020-02-18 16:19:40.658 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==>  Preparing: SELECT t1.id, t1.finish, t1.score, t1.create_time, t1.update_time, t2.id as task_id, t2.content as task_content, t2.score as task_score, t2.status as task_status, t2.description AS task_description, t2.cycle_type_id as task_cycle_type_id, t2.create_time AS task_create_time, t2.update_time AS task_update_time FROM ( SELECT * from `task_record` t0 where 1=1 and `finish` is not null ORDER BY t0.create_time desc, t0.task_id asc limit ?,? ) t1 LEFT JOIN `task` t2 ON t1.task_id = t2.id 
2020-02-18 16:19:40.659 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - ==> Parameters: 10(Integer), 10(Integer)
2020-02-18 16:19:40.695 [http-nio-8989-exec-2] DEBUG c.l.t.d.m.m.T.listByFinishNotNull - <==      Total: 9
2020-02-18 16:20:47.680 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService 'taskScheduler'
2020-02-18 16:20:47.687 [SpringContextShutdownHook] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-18 16:20:47.735 [SpringContextShutdownHook] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2020-02-18 16:20:47.735 [SpringContextShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'primaryPersistenceUnit'
2020-02-18 16:20:47.736 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2020-02-18 16:20:47.741 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
